###############################################################################
#
# Purpose of this file:
#     This file maps columns from the CSV file to fields of your Drupal 8 instance.
#
# We will use Drush to run the migration, but first we must perform the following tasks.
#
# TASKS:
#    1) Create 'Person' Vocabulary (machine name of 'person')
#    2) Create 'Movie Genre' Vocabulary (machine name of 'movie_genre')
#    3) Create 'Movie' Content Type (machine name of 'movie')
#    4) Create Fields on the movie content type, as indicated by the keys under 'process:'.
#
# IMPORTANT!
#     You must match the machine names of your fields names
#     exactly as indicated by the keys below 'process:'.
#       Example: 'field_year_released' must exist in your Movie content type.
#
#     You must match the machine name of the Movie Content Type as 'movie'.
#     You must match the machine name of the Person vocabulary as 'person'.
#     You must match the machine name of the Movie Genre Vocabulary as 'movie_genre'
#
# Notes:
# 1) Do not modify this file! Modification could result in migration failure.
#
###############################################################################
langcode: en
status: true
dependencies:
  enforced:
    # List here the name of the module that provided this migration if you want
    # this config to be removed when that module is uninstalled.
    module:
      - mymdb_migrate
id: mymdb_migrate
label: "Movies CSV file migration"
migration_tags:
  - CSV
source:
  # The source data is in CSV files, so we use the 'csv' source plugin.
  plugin: csv
  # Full path to the file. (e.g. [docroot]/sites/default/files/csv/movies.csv )
  path: "public://csv/movies.csv"
  # The number of rows at the beginning which are not data.
  header_row_count: 1
  # This is the field name from the source CSV file representing the key
  # uniquely identifying each CSV row.
  keys:
    - row_id
  # Here under column_names, we are mapping the CSV columns to migration variables
  # which get used under the 'process:' section.
  column_names:
    0:
      row_id: "Row Identifier"
    1:
      Year: "Year Released"
    2:
      Length: "Movie length in minutes"
    3:
      Title: "Movie title"
    4:
      Genre: "Genre of Movie"
    5:
      Actor: "Main actor"
    6:
      Actress: "Main actoress"
    7:
      Director: "Movie director"
    8:
      Popularity: "Popularity of movie"
    9:
      Awards: "Movie has awards (Yes/No)"
process:
  # The entity (node) type we are creating has machine name of 'movie'.
  type:
    plugin: default_value
    default_value: movie
  # Node title property is 'title'. No need to create a field for title.
  title: Title
  #############################################################################
  # Field mappings below. For each field listed here,
  # create a field in the 'movie' content type.
  #
  # Notes: For simplicity, create all fields as one of two types:
  #        1) "Text (plain)" or
  #        2) Entity reference (Taxonomy)
  #
  # If 'plugin' is entity_generate, create a Taxonomy entity reference field.
  # For example:
  #   'field_genre' is a Taxonomy entity reference to 'movie_genre' Vocabulary.
  #   'field_actor' is a Taxonomy entity reference to 'person' Vocabulary.
  #
  # If there is no plugin defined, create the field type as "Text (plain)".
  # For example:
  #   'field_year_released' is a Text (plain) field.
  #   'field_movie_length' is a Text (plain) field.
  #
  # Important!
  #  The machine name of field must match exactly the name of the keys indicated below.
  #  e.g. 'field_year_released' indicates you must have a field in the movie content type
  #
  # For more information on Process Plugins:
  # https://www.drupal.org/docs/8/api/migrate-api/migrate-process-plugins/migrate-process-overview
  #
  #############################################################################
  field_year_released: Year
  field_movie_length: Length
  # You may want to create field_popularity as an integer for better Views sorting.
  field_popularity: Popularity
  field_awards: Awards
  field_genre:
    plugin: entity_generate
    source: Genre
    entity_type: taxonomy_term
    bundle_key: vid
    bundle: movie_genre
    value_key: name
  field_actor:
    plugin: entity_generate
    source: Actor
    entity_type: taxonomy_term
    bundle_key: vid
    bundle: person
    value_key: name
  field_actress:
    plugin: entity_generate
    source: Actress
    entity_type: taxonomy_term
    bundle_key: vid
    bundle: person
    value_key: name
  field_director:
    plugin: entity_generate
    source: Director
    entity_type: taxonomy_term
    bundle_key: vid
    bundle: person
    value_key: name
destination:
  # Here we're saying that each row of data (line from the CSV file) will be
  # used to create a node entity. The node is created of type 'movie' because
  # that is what we defined on Lines 75 - 77 above.
  plugin: entity:node
# List any optional or required migration dependencies.
# "required:" means that 100% of the content must be migrated
# "optional:" means that that the other dependency should be run first but if there
# are items from the dependant migration that were not successful, it will still
# run the migration.
migration_dependencies:
  required: {}
  optional: {}
